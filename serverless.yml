service: romicusblr-portfolio

plugins:
  - serverless-s3-sync

provider:
  name: aws
  profile: ${AWS_PROFILE}
  runtime: nodejs18.x
  stage: dev
  region: ${AWS_REGION}
  memorySize: 128

# functions:
#   headers:
#     handler: functions/headers.handler
#     architecture: x86_64
#   api:
#     handler: functions/index.handler
#     architecture: arm64
#     events:
#       - http:
#           path: /
#           method: ANY
#           cors: true
#       - http:
#           path: /{proxy+}
#           method: ANY
#           cors: true

custom:
  siteName: mastyka.dev
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: build # required

Resources:
  StaticSite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: ${self:custom.siteName}
      WebsiteConfiguration:
        IndexDocument: index.html
  StaticSiteS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: StaticSite
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
            - s3:GetObject
            Resource:
              Fn::Join: [
                "", [
                  "arn:aws:s3:::",
                  {
                    "Ref": "StaticSite"
                  },
                  "/*"
                ]
              ]
  DnsRecord:
    Type: "AWS::Route53::RecordSet"
    Properties:
      AliasTarget:
        DNSName: ${self:custom.aliasDNSName}
        HostedZoneId: ${self:custom.aliasHostedZoneId}
      HostedZoneName: ${self:custom.siteName}.
      Name:
        Ref: StaticSite
      Type: 'A'
